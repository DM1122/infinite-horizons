version: "3.8"

services:
  mc:
    image: itzg/minecraft-server
    container_name: minecraft
    tty: true
    stdin_open: true
    ports:
      - "25565:25565"
      - "24454:24454/udp" # for Simple Voice Chat
      - "25049:25049/tcp" # for Distant Horizons
    environment:
      EULA: "TRUE"
      VERSION: 1.20.1
      DIFFICULTY: normal
      SEED: galaxyheart
      MOTD: "Infinite Horizons | Powered by sunshine \u2600"
      MOD_PLATFORM: MODRINTH
      MODRINTH_MODPACK: "Infinite Horizons 1.0.0.mrpack"
      OVERRIDE_SERVER_PROPERTIES: "TRUE"
      ICON: "icon.png"
      MAX_MEMORY: 4G
      VIEW_DISTANCE: 12
      SIMULATION_DISTANCE: 12
      ALLOW_FLIGHT: True
      MAX_PLAYERS: 4
      # MAX_TICK_TIME: "-1"
      # AUTOPAUSE_TIMEOUT_INIT: "60"
      # AUTOPAUSE_TIMEOUT_EST: "60"
      # STOP_SERVER_ANNOUNCE_DELAY: 30
      # MODRINTH_EXCLUDE_FILES: DistantHorizons-2.1.0-a-RC1-1.20.1
    restart: unless-stopped
    volumes:
      # attach the relative directory 'data' to the container's /data path
      # "init" container for mc to restore the data volume when empty
      - ./data:/data
    # depends_on: # Uncomment to restore latest backup
    #   restore-backup:
    #     condition: service_completed_successfully
  # restore-backup:
  #   # Same image as mc, but any base image with bash and tar will work
  #   image: itzg/mc-backup
  #   restart: no
  #   entrypoint: restore-tar-backup
  #   volumes:
  #     # Must be same mount as mc service, needs to be writable
  #     - ./data:/data
  #     # Must be same mount as backups service, but can be read-only
  #     - ./backups:/backups:ro
  backups:
    image: itzg/mc-backup
    container_name: minecraft-backup
    depends_on:
      mc:
        condition: service_healthy
    restart: unless-stopped
    environment:
      BACKUP_INTERVAL: "1h"
      PRUNE_BACKUPS_DAYS: "7"
      PAUSE_IF_NO_PLAYERS: true
      RCON_HOST: mc
      # since this service waits for mc to be healthy, no initial delay is needed
      INITIAL_DELAY: 0
      # As an example, to backup only the world data:
      # INCLUDES: world,world_nether,world_the_end
    volumes:
      - ./data:/data:ro
      - ./backups:/backups
